{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/barrast/Desktop/Projects/erxe/app/components/UserMe.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { graphql } from '@octokit/graphql';\n\nvar UserMe = function UserMe(_ref) {\n  var token = _ref.token;\n\n  var _useState = useState(''),\n      res = _useState[0],\n      setRes = _useState[1];\n\n  useEffect(function () {\n    function init() {\n      var response;\n      return _regeneratorRuntime.async(function init$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(graphql(\"\\n          {\\n            viewer {\\n              login\\n            }\\n          }\\n        \", {\n                headers: {\n                  authorization: \"token \".concat(token)\n                }\n              }));\n\n            case 2:\n              response = _context.sent;\n              //   const response = await client(token)(`\n              //   {\n              //     query {\n              //       viewer {\n              //         login\n              //       }\n              //     }\n              //   }\n              // `);\n              console.log('RESPONSE');\n              console.log(res);\n              setRes(JSON.stringify(response));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    init();\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, \"Res:\", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), res);\n};\n\nexport default UserMe;","map":{"version":3,"sources":["/Users/barrast/Desktop/Projects/erxe/app/components/UserMe.tsx"],"names":["useEffect","useState","graphql","UserMe","token","res","setRes","init","headers","authorization","response","console","log","JSON","stringify"],"mappings":";;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAMA,IAAMC,MAA6B,GAAG,SAAhCA,MAAgC,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBAC7BH,QAAQ,CAAC,EAAD,CADqB;AAAA,MAC5CI,GAD4C;AAAA,MACvCC,MADuC;;AAGnDN,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeO,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACyBL,OAAO,mGAQ5B;AACEM,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,aAAa,kBAAWL,KAAX;AADN;AADX,eAR4B,CADhC;;AAAA;AACQM,cAAAA,QADR;AAgBE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AAEAC,cAAAA,MAAM,CAACO,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAD,CAAN;;AA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgCAH,IAAAA,IAAI;AACL,GAlCQ,EAkCN,EAlCM,CAAT;AAoCA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGF,GAHH,CADF;AAOD,CA9CD;;AAgDA,eAAeF,MAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { graphql } from '@octokit/graphql';\n\nimport client from '../graphql/client';\n\ntype UserMeProps = { token: any };\n\nconst UserMe: React.FC<UserMeProps> = ({ token }) => {\n  const [res, setRes] = useState('');\n\n  useEffect(() => {\n    async function init() {\n      const response = await graphql(\n        `\n          {\n            viewer {\n              login\n            }\n          }\n        `,\n        {\n          headers: {\n            authorization: `token ${token}`,\n          },\n        }\n      );\n\n      //   const response = await client(token)(`\n      //   {\n      //     query {\n      //       viewer {\n      //         login\n      //       }\n      //     }\n      //   }\n      // `);\n\n      console.log('RESPONSE');\n      console.log(res);\n\n      setRes(JSON.stringify(response));\n    }\n\n    init();\n  }, []);\n\n  return (\n    <div>\n      Res:\n      <br />\n      {res}\n    </div>\n  );\n};\n\nexport default UserMe;\n"]},"metadata":{},"sourceType":"module"}