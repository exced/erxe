{"ast":null,"code":"var _jsxFileName = \"/Users/barrast/Desktop/Projects/erxe/app/components/UserMe.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { graphql } from '@octokit/graphql';\n\nconst UserMe = ({\n  token\n}) => {\n  const {\n    0: res,\n    1: setRes\n  } = useState('');\n  useEffect(() => {\n    async function init() {\n      const response = await graphql(`\n          {\n            query {\n              viewer {\n                login\n              }\n            }\n          }\n        `, {\n        headers: {\n          authorization: `token ${token}`\n        }\n      }); //   const response = await client(token)(`\n      //   {\n      //     query {\n      //       viewer {\n      //         login\n      //       }\n      //     }\n      //   }\n      // `);\n\n      console.log('RESPONSE');\n      console.log(res);\n      setRes(JSON.stringify(response));\n    }\n\n    init();\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, \"Res:\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), res);\n};\n\nexport default UserMe;","map":{"version":3,"sources":["/Users/barrast/Desktop/Projects/erxe/app/components/UserMe.tsx"],"names":["useEffect","useState","graphql","UserMe","token","res","setRes","init","response","headers","authorization","console","log","JSON","stringify"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAMA,MAAMC,MAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACnD,QAAM;AAAA,OAACC,GAAD;AAAA,OAAMC;AAAN,MAAgBL,QAAQ,CAAC,EAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeO,IAAf,GAAsB;AACpB,YAAMC,QAAQ,GAAG,MAAMN,OAAO,CAC3B;;;;;;;;SAD2B,EAU5B;AACEO,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,SAAQN,KAAM;AADvB;AADX,OAV4B,CAA9B,CADoB,CAkBpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAO,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AAEAC,MAAAA,MAAM,CAACO,IAAI,CAACC,SAAL,CAAeN,QAAf,CAAD,CAAN;AACD;;AAEDD,IAAAA,IAAI;AACL,GApCQ,EAoCN,EApCM,CAAT;AAsCA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGF,GAHH,CADF;AAOD,CAhDD;;AAkDA,eAAeF,MAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { graphql } from '@octokit/graphql';\n\nimport client from '../graphql/client';\n\ntype UserMeProps = { token: any };\n\nconst UserMe: React.FC<UserMeProps> = ({ token }) => {\n  const [res, setRes] = useState('');\n\n  useEffect(() => {\n    async function init() {\n      const response = await graphql(\n        `\n          {\n            query {\n              viewer {\n                login\n              }\n            }\n          }\n        `,\n        {\n          headers: {\n            authorization: `token ${token}`,\n          },\n        }\n      );\n\n      //   const response = await client(token)(`\n      //   {\n      //     query {\n      //       viewer {\n      //         login\n      //       }\n      //     }\n      //   }\n      // `);\n\n      console.log('RESPONSE');\n      console.log(res);\n\n      setRes(JSON.stringify(response));\n    }\n\n    init();\n  }, []);\n\n  return (\n    <div>\n      Res:\n      <br />\n      {res}\n    </div>\n  );\n};\n\nexport default UserMe;\n"]},"metadata":{},"sourceType":"module"}