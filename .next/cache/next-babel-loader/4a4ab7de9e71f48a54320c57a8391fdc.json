{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/barrast/Desktop/Projects/erxe/app/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { request } from '@octokit/request';\n\nfunction Home(props) {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, \"Hello world!\"), __jsx(\"a\", {\n    href: \"/api/github/oauth/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, \"Login with GitHub\"), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Token: $\", props.token));\n}\n\nHome.getInitialProps = function _callee(_ref) {\n  var _req$query;\n\n  var req, code, response;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref.req;\n          code = (_req$query = req.query) === null || _req$query === void 0 ? void 0 : _req$query.code;\n\n          if (code) {\n            _context.next = 4;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            token: ''\n          });\n\n        case 4:\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(request(\"POST \".concat(location.origin, \"/api/github/oauth/token\"), {\n            code: code\n          }));\n\n        case 6:\n          response = _context.sent;\n          return _context.abrupt(\"return\", {\n            token: response.data.token\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/barrast/Desktop/Projects/erxe/app/pages/index.tsx"],"names":["request","Home","props","token","getInitialProps","req","code","query","location","origin","response","data"],"mappings":";;;;AAAA,SAASA,OAAT,QAAwB,kBAAxB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAG,IAAA,IAAI,EAAC,yBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaA,KAAK,CAACC,KAAnB,CAHF,CADF;AAOD;;AAEDF,IAAI,CAACG,eAAL,GAAuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,QAASA,GAAT;AACfC,UAAAA,IADe,iBACRD,GAAG,CAACE,KADI,+CACR,WAAWD,IADH;;AAAA,cAEhBA,IAFgB;AAAA;AAAA;AAAA;;AAAA,2CAGZ;AAAEH,YAAAA,KAAK,EAAE;AAAT,WAHY;;AAAA;AAAA;AAAA,2CAOEH,OAAO,gBACpBQ,QAAQ,CAACC,MADW,8BAE5B;AACEH,YAAAA,IAAI,EAAJA;AADF,WAF4B,CAPT;;AAAA;AAOfI,UAAAA,QAPe;AAAA,2CAcd;AAAEP,YAAAA,KAAK,EAAEO,QAAQ,CAACC,IAAT,CAAcR;AAAvB,WAdc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAiBA,eAAeF,IAAf","sourcesContent":["import { request } from '@octokit/request';\n\nfunction Home(props) {\n  return (\n    <div>\n      <h1>Hello world!</h1>\n      <a href=\"/api/github/oauth/login\">Login with GitHub</a>\n      <h2>Token: ${props.token}</h2>\n    </div>\n  );\n}\n\nHome.getInitialProps = async ({ req }) => {\n  const code = req.query?.code;\n  if (!code) {\n    return { token: '' };\n  }\n\n  // Exchange code for token\n  const response = await request(\n    `POST ${location.origin}/api/github/oauth/token`,\n    {\n      code,\n    }\n  );\n\n  return { token: response.data.token };\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}