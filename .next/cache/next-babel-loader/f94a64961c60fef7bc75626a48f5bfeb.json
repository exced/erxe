{"ast":null,"code":"var _jsxFileName = \"/Users/barrast/Desktop/Projects/erxe/app/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { request } from '@octokit/request';\nimport UserMe from '../components/UserMe';\nimport initializeClient from '../graphql/client';\n\nfunction Home(props) {\n  if (!props.token) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }, __jsx(\"a\", {\n      href: \"/api/github/oauth/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, \"Login with GitHub\"));\n  }\n\n  const client = initializeClient(props.token);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(UserMe, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n}\n\nHome.getInitialProps = async ({\n  req\n}) => {\n  var _req$query;\n\n  console.log('HELLOOOO');\n  console.log(req.query);\n  const code = (_req$query = req.query) === null || _req$query === void 0 ? void 0 : _req$query.code;\n\n  if (!code) {\n    return {\n      token: ''\n    };\n  } // Exchange code for token\n\n\n  const response = await request(`POST ${location.origin}/api/github/oauth/token`, {\n    code\n  });\n  return {\n    token: response.data.token\n  };\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/barrast/Desktop/Projects/erxe/app/pages/index.tsx"],"names":["request","UserMe","initializeClient","Home","props","token","client","getInitialProps","req","console","log","query","code","response","location","origin","data"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,gBAAP,MAA6B,mBAA7B;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,MAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAC,yBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF;AAKD;;AAED,QAAMC,MAAM,GAAGJ,gBAAgB,CAACE,KAAK,CAACC,KAAP,CAA/B;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAEC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAEDH,IAAI,CAACI,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AAAA;;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,KAAhB;AACA,QAAMC,IAAI,iBAAGJ,GAAG,CAACG,KAAP,+CAAG,WAAWC,IAAxB;;AACA,MAAI,CAACA,IAAL,EAAW;AACT,WAAO;AAAEP,MAAAA,KAAK,EAAE;AAAT,KAAP;AACD,GANuC,CAQxC;;;AACA,QAAMQ,QAAQ,GAAG,MAAMb,OAAO,CAC3B,QAAOc,QAAQ,CAACC,MAAO,yBADI,EAE5B;AACEH,IAAAA;AADF,GAF4B,CAA9B;AAOA,SAAO;AAAEP,IAAAA,KAAK,EAAEQ,QAAQ,CAACG,IAAT,CAAcX;AAAvB,GAAP;AACD,CAjBD;;AAmBA,eAAeF,IAAf","sourcesContent":["import { request } from '@octokit/request';\n\nimport UserMe from '../components/UserMe';\nimport initializeClient from '../graphql/client';\n\nfunction Home(props) {\n  if (!props.token) {\n    return (\n      <div>\n        <a href=\"/api/github/oauth/login\">Login with GitHub</a>\n      </div>\n    );\n  }\n\n  const client = initializeClient(props.token);\n\n  return (\n    <div>\n      <UserMe client={client} />\n    </div>\n  );\n}\n\nHome.getInitialProps = async ({ req }) => {\n  console.log('HELLOOOO');\n  console.log(req.query);\n  const code = req.query?.code;\n  if (!code) {\n    return { token: '' };\n  }\n\n  // Exchange code for token\n  const response = await request(\n    `POST ${location.origin}/api/github/oauth/token`,\n    {\n      code,\n    }\n  );\n\n  return { token: response.data.token };\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}