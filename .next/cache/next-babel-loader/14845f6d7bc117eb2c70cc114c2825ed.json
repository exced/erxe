{"ast":null,"code":"var _jsxFileName = \"/Users/barrast/Desktop/Projects/erxe/app/components/ClientProvider.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useEffect, useState } from 'react';\nimport { request } from '@octokit/request';\nimport UserMe from '../components/UserMe';\n\nconst ClientProvider = (_ref) => {\n  let {\n    code\n  } = _ref,\n      children = _objectWithoutProperties(_ref, [\"code\"]);\n\n  const {\n    0: token,\n    1: setToken\n  } = useState('');\n  useEffect(() => {\n    async function init() {\n      // Exchange code for token\n      const response = await request(`POST ${location.origin}/api/github/oauth/token`, {\n        code\n      });\n      setToken(response.data.token);\n    }\n\n    init();\n  }, []);\n\n  if (!token) {\n    return __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  return __jsx(UserMe, {\n    token: token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default ClientProvider;","map":{"version":3,"sources":["/Users/barrast/Desktop/Projects/erxe/app/components/ClientProvider.tsx"],"names":["useEffect","useState","request","UserMe","ClientProvider","code","children","token","setToken","init","response","location","origin","data"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,cAA6B,GAAG,UAA2B;AAAA,MAA1B;AAAEC,IAAAA;AAAF,GAA0B;AAAA,MAAfC,QAAe;;AAC/D,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeS,IAAf,GAAsB;AACpB;AACA,YAAMC,QAAQ,GAAG,MAAMR,OAAO,CAC3B,QAAOS,QAAQ,CAACC,MAAO,yBADI,EAE5B;AACEP,QAAAA;AADF,OAF4B,CAA9B;AAOAG,MAAAA,QAAQ,CAACE,QAAQ,CAACG,IAAT,CAAcN,KAAf,CAAR;AACD;;AAEDE,IAAAA,IAAI;AACL,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAI,CAACF,KAAL,EAAY;AACV,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,SAAO,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAxBD;;AA0BA,eAAeH,cAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { request } from '@octokit/request';\n\nimport UserMe from '../components/UserMe';\n\nconst ClientProvider: React.FC<any> = ({ code, ...children }) => {\n  const [token, setToken] = useState('');\n\n  useEffect(() => {\n    async function init() {\n      // Exchange code for token\n      const response = await request(\n        `POST ${location.origin}/api/github/oauth/token`,\n        {\n          code,\n        }\n      );\n\n      setToken(response.data.token);\n    }\n\n    init();\n  }, []);\n\n  if (!token) {\n    return <h3>Loading...</h3>;\n  }\n\n  return <UserMe token={token} />;\n};\n\nexport default ClientProvider;\n"]},"metadata":{},"sourceType":"module"}